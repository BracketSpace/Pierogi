/**
 * Mixins
 */

@mixin background( $url, $size: contain, $position: center, $repeat: no-repeat ) {
	background-image: url("./images/" + $url);
	background-position: $position;
	background-repeat: $repeat;
	background-size: $size;
}

@mixin pseudoelement( $content: "", $width: null, $height: null, $top: null, $left: null ) {

	@if ( is-number( $width ) and null == unit( $width ) ) {
		$width: rem-calc($width);
	}

	@if ( is-number( $height ) and  null == unit( $height ) ) {
		$height: rem-calc($height);
	}

	@if ( is-number( $top ) and null == unit( $top ) ) {
		$top: rem-calc($top);
	}

	@if ( is-number( $left ) and null == unit( $left ) ) {
		$left: rem-calc($left);
	}

	content: $content;
	display: block;
	height: $height;
	left: $left;
	position: absolute;
	top: $top;
	width: $width;

	@content;
}

@mixin before( $content: "", $width: null, $height: null, $top: null, $left: null ) {

	&::before {

		@include pseudoelement( $content, $width, $height, $top, $left ) {
			@content;
		}
	}
}

@mixin after( $content: "", $width: null, $height: null, $top: null, $left: null ) {

	&::after {

		@include pseudoelement( $content, $width, $height, $top, $left ) {
			@content;
		}
	}
}

@mixin bp-up( $breakpoint, $use-rem: true ) {
	$breakpoint-value: bp($breakpoint, $use-rem);

	@if ( $breakpoint-value ) {

		@media (min-width: $breakpoint-value) {
			@content;
		}
	}
}

@mixin bp-down( $breakpoint, $use-rem: true ) {
	$breakpoint-value: bp($breakpoint, $use-rem);
	$diff: 1;

	@if ( $use-rem == true ) {
		$diff: rem-calc($diff);
	}

	@if ( $breakpoint-value ) {

		@media (max-width: ($breakpoint-value - $diff)) {
			@content;
		}
	}
}

@mixin bp-between( $low, $high, $use-rem: true ) {
	$low-value: bp($low, $use-rem);
	$high-value: bp($high, $use-rem);
	$diff: 1;

	@if ( $use-rem == true ) {
		$diff: rem-calc($diff);
	}

	@if ( $low-value and $high-value ) {

		@media (min-width: $low-value) and (max-width: ($high-value - $diff)) {
			@content;
		}
	}
}

@mixin img {

	img {
		display: block;
		height: auto;
		max-width: 100%;

		@content;
	}
}

@mixin font-size( $size, $line-height: null ) {
	font-size: #{$size}px;
	font-size: rem-calc($size);

	@if ( type-of( $line-height ) == "number" ) {
		$calculated: $line-height / $size;
		$round: round($calculated * 10000) / 10000;

		@if ( $calculated != $round ) {
			/* stylelint-disable-next-line */
			$calculated: calc(#{$line-height}em / #{$size});
		}

		line-height: $calculated;
	}
}
